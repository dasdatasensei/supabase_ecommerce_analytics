name: ecommerceanalytics

services:
  # Supabase services
  supabase-db:
    image: supabase/postgres:15.1.0.147
    ports:
      - "5433:5432"
    env_file:
      - ../.env.dev
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      DB_SCHEMA: ${DB_SCHEMA}
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
      - ./init-metabase-db.sh:/docker-entrypoint-initdb.d/init-metabase-db.sh
      - ../init-db-config.sh:/docker-entrypoint-initdb.d/init-db-config.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - supabase-network

  supabase-api:
    image: postgrest/postgrest:v11.2.0
    depends_on:
      - supabase-db
    restart: always
    env_file:
      - ../.env.dev
    environment:
      PGRST_DB_URI: postgres://${DB_USER}:${DB_PASSWORD}@supabase-db:5432/${DB_NAME}
      PGRST_DB_SCHEMAS: public,${DB_SCHEMA},auth
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${SUPABASE_SERVICE_KEY}
      PGRST_JWT_ROLE_CLAIM_KEY: ".role"
    ports:
      - "3000:3000"
    networks:
      - supabase-network

  # Add the pg-meta service required by Supabase Studio
  pg-meta:
    image: supabase/postgres-meta:v0.65.0
    depends_on:
      - supabase-db
    restart: always
    env_file:
      - ../.env.dev
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: supabase-db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: ${DB_NAME}
      PG_META_DB_USER: ${DB_USER}
      PG_META_DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8081:8080"
    networks:
      - supabase-network

  supabase-studio:
    image: supabase/studio:latest
    restart: unless-stopped
    ports:
      - "8082:3000"
    env_file:
      - ../.env.dev
    environment:
      SUPABASE_URL: http://supabase-api:3000
      # Fix PG Meta URL to point to pg-meta service instead of localhost
      STUDIO_PG_META_URL: http://pg-meta:8080
      PG_META_PORT: 8080
      PG_META_USER: ${DB_USER}
      PG_META_PASSWORD: ${DB_PASSWORD}
      PG_META_DB: ${DB_NAME}
      PG_META_DB_PORT: 5432
      PG_META_DB_HOST: supabase-db
      SUPABASE_ANON_KEY: ${SUPABASE_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
    healthcheck:
      test: ["CMD-SHELL", "node -e 'process.exit(0)'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      - supabase-api
      - supabase-db
      - pg-meta
    networks:
      - supabase-network

  # Metabase
  metabase:
    image: metabase/metabase:v0.46.6
    container_name: ecommerceanalytics-metabase-1
    restart: unless-stopped
    env_file:
      - ../.env.dev
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${METABASE_DB_NAME}
      MB_DB_PORT: 5432
      MB_DB_USER: ${DB_USER}
      MB_DB_PASS: ${DB_PASSWORD}
      MB_DB_HOST: supabase-db
      JAVA_TIMEZONE: UTC
    ports:
      - "3333:3000"
    depends_on:
      supabase-db:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:3000/api/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - supabase-network

  # Airflow services
  airflow-webserver:
    build:
      context: ..
      dockerfile: docker/airflow.Dockerfile
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ../src:/opt/airflow/src
      - airflow-logs:/opt/airflow/logs
    env_file:
      - ../.env.dev
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@supabase-db:5432/${DB_NAME}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY}
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/src/dags
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_HOME=/opt/airflow
      - DBT_PROFILES_DIR=/opt/airflow/src/dbt_project/profiles
    command: >
      bash -c "airflow db init &&
               airflow users create --username ${AIRFLOW_ADMIN_USER} --firstname ${AIRFLOW_ADMIN_FIRSTNAME} --lastname ${AIRFLOW_ADMIN_LASTNAME} --role Admin --email ${AIRFLOW_ADMIN_EMAIL} --password ${AIRFLOW_ADMIN_PASSWORD} &&
               airflow webserver"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - supabase-db
    networks:
      - supabase-network

  airflow-scheduler:
    build:
      context: ..
      dockerfile: docker/airflow.Dockerfile
    restart: always
    volumes:
      - ../src:/opt/airflow/src
      - airflow-logs:/opt/airflow/logs
    env_file:
      - ../.env.dev
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@supabase-db:5432/${DB_NAME}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY}
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/src/dags
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_HOME=/opt/airflow
      - DBT_PROFILES_DIR=/opt/airflow/src/dbt_project/profiles
    command: scheduler
    depends_on:
      - airflow-webserver
    networks:
      - supabase-network

networks:
  supabase-network:
    driver: bridge

volumes:
  supabase-db-data:
  airflow-logs:
